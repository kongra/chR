// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// arePosInts
bool arePosInts(const IntegerVector xs);
RcppExport SEXP _chR_arePosInts(SEXP xsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const IntegerVector >::type xs(xsSEXP);
    rcpp_result_gen = Rcpp::wrap(arePosInts(xs));
    return rcpp_result_gen;
END_RCPP
}
// areNegInts
bool areNegInts(const IntegerVector xs);
RcppExport SEXP _chR_areNegInts(SEXP xsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const IntegerVector >::type xs(xsSEXP);
    rcpp_result_gen = Rcpp::wrap(areNegInts(xs));
    return rcpp_result_gen;
END_RCPP
}
// areNatInts
bool areNatInts(const IntegerVector xs);
RcppExport SEXP _chR_areNatInts(SEXP xsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const IntegerVector >::type xs(xsSEXP);
    rcpp_result_gen = Rcpp::wrap(areNatInts(xs));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_chR_arePosInts", (DL_FUNC) &_chR_arePosInts, 1},
    {"_chR_areNegInts", (DL_FUNC) &_chR_areNegInts, 1},
    {"_chR_areNatInts", (DL_FUNC) &_chR_areNatInts, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_chR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
